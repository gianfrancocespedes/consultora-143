---
import Next from "../icons/Next.astro";
import Previous from "../icons/Previous.astro";
---

<div class="w-full mx-auto p-4">
    <h2 class="text-xl font-semibold text-gray-700 dark:text-gray-300 mb-4">Calendario de Disponibilidad de Asesores
    </h2>

    <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-2">
        <div class="flex justify-between items-center mb-4">
            <h3 id="monthLabel" class="text-lg font-medium text-gray-700 dark:text-gray-300"></h3>
            <div class="flex space-x-2">
                <button id="cld-previous" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600">
                    <Previous/>
                </button>
                <button id="cld-next" onclick="changeMonth(1)" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600">
                    <Next/>
                </button>
            </div>
        </div>

        <!-- Calendario -->
        <div id="calendarGrid" class="grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-5 xl:grid-cols-7 gap-4">
            <!-- Las celdas del calendario se generarán con JavaScript -->
        </div>

    </div>
</div>

<script is:inline>

    function showCalendar() {
        const monthLabel = document.getElementById('monthLabel');
        const calendarGrid = document.getElementById('calendarGrid');
        const monthNames = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre",
            "Octubre", "Noviembre", "Diciembre"
        ];
        let currentMonth = new Date().getMonth();
        let currentYear = new Date().getFullYear();

        // Datos de ejemplo para la disponibilidad de asesores
        const asesoresDisponibilidad = {
            // Ejemplo de estructura: 'fecha': [{nombre: 'asesor', hora: 'hora'}]
            '2024-01-05': [{
                nombre: 'Asesor A',
                hora: '10:00 - 12:00'
            }, {
                nombre: 'Asesor B',
                hora: '15:00 - 17:00'
            }],
            '2024-01-15': [{
                nombre: 'Asesor A',
                hora: '09:00 - 11:00'
            }],
            '2024-01-20': [{
                nombre: 'Asesor B',
                hora: '14:00 - 16:00'
            }, {
                nombre: 'Asesor C',
                hora: '10:00 - 12:00'
            }, {
                nombre: 'Asesor C',
                hora: '10:00 - 12:00'
            }, {
                nombre: 'Asesor C',
                hora: '10:00 - 12:00'
            }, {
                nombre: 'Asesor C',
                hora: '10:00 - 12:00'
            }],
            '2024-02-13': [{
                nombre: 'Asesor A',
                hora: '09:00 - 11:00'
            }],
            // ... más fechas, asesores y horarios
        };


        // Función para cambiar el mes
        function changeMonth(step) {
            currentMonth += step;
            if (currentMonth < 0 || currentMonth > 11) {
                currentYear += Math.floor(currentMonth / 12);
                currentMonth %= 12;
                if (currentMonth < 0) currentMonth += 12;
            }
            renderCalendar();
        }

        // Función para renderizar el calendario
        function renderCalendar() {
            monthLabel.textContent = `${monthNames[currentMonth]} ${currentYear}`;
            calendarGrid.innerHTML = ''; // Limpiar el calendario

            let daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
            let firstDayOfWeek = new Date(currentYear, currentMonth, 1).getDay();

            // Agregar celdas vacías para los días anteriores al día 1
            for (let i = 0; i < firstDayOfWeek; i++) {
                let emptyDayElement = document.createElement('div');
                //emptyDayElement.className = 'border border-gray-200 dark:border-gray-700 rounded-lg p-2 min-h-36';
                calendarGrid.appendChild(emptyDayElement);
            }

            for (let day = 1; day <= daysInMonth; day++) {
                let date = `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
                let asesores = asesoresDisponibilidad[date] || [];
                let dayElement = document.createElement('div');
                dayElement.className = 'border border-gray-200 dark:border-gray-700 rounded-lg p-2 min-h-36';
                dayElement.innerHTML = `<p class="text-sm font-medium text-gray-700 dark:text-gray-300">${day}</p>`;

                if (asesores.length > 0) {
                    let asesoresElement = document.createElement('div');
                    asesoresElement.className = 'mt-2 overflow-auto max-h-24 calendar-cell';
                    asesores.forEach(({ nombre, hora }) => {
                        let asesorDiv = document.createElement('div');
                        asesorDiv.className = 'text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full px-2 py-1 my-1';
                        asesorDiv.textContent = `${nombre} (${hora})`;
                        asesoresElement.appendChild(asesorDiv);
                    });
                    dayElement.appendChild(asesoresElement);
                }
                calendarGrid.appendChild(dayElement);
            }
        }



        // Inicialización
        renderCalendar();

        document.getElementById("cld-previous").addEventListener('click', function () {
            changeMonth(-1);
        });

        document.getElementById("cld-next").addEventListener('click', function () {
            changeMonth(1);
        });
        
    }

    showCalendar();

    document.addEventListener('astro:after-swap', function () {
        showCalendar();
    });

</script>

<style is:inline>
    /* Estilo para el scrollbar */
    .calendar-cell::-webkit-scrollbar {
        width: 6px;
        /* Ancho del scrollbar */
        height: 6px;
        /* Altura del scrollbar para desplazamiento horizontal */
    }

    .calendar-cell::-webkit-scrollbar-track {
        background: transparent;
        /* Fondo del track del scrollbar */
    }

    .calendar-cell::-webkit-scrollbar-thumb {
        background-color: #a0a0a0;
        /* Color del scrollbar */
        border-radius: 10px;
        /* Bordes redondeados */
        border: 2px solid transparent;
        /* Borde transparente para un efecto más suave */
    }

    .calendar-cell:hover::-webkit-scrollbar-thumb {
        background-color: #808080;
        /* Color del scrollbar al pasar el mouse por encima */
    }
</style>